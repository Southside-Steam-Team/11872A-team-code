16
{"last_modification_time":0,"language":1,"import_file":"c:/users/lijing/documents/github/11872a-team-code/pros-cortex-tasktest/src/opcontrol0.c","args_hash":14019735862634459746,"includes":[{"line":9,"resolved_path":"c:/users/lijing/documents/github/11872a-team-code/pros-cortex-tasktest/include/main.h"}],"dependencies":["c:/users/lijing/documents/github/11872a-team-code/pros-cortex-tasktest/include/main.h","c:/users/lijing/documents/github/11872a-team-code/pros-cortex-tasktest/include/api.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/stdlib.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/_ansi.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/newlib.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/sys/config.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/sys/features.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/sys/reent.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/sys/_types.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/machine/_types.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/machine/_default_types.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/sys/lock.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/sys/cdefs.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/alloca.h","c:/program files/pros/toolchain/usr/lib/gcc/arm-none-eabi/7.2.1/include/stdint.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/stdint.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/sys/_intsup.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/sys/_stdint.h","c:/program files/pros/toolchain/usr/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h","c:/program files/pros/toolchain/usr/lib/gcc/arm-none-eabi/7.2.1/include/stdarg.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/machine/ieeefp.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/_newlib_version.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/machine/stdlib.h","c:/program files/pros/toolchain/usr/lib/gcc/arm-none-eabi/7.2.1/include/stdbool.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[0,1,2],"uses":[]}],"funcs":[{"id":0,"usr":250168000188101300,"detailed_name":"void operatorControl()","short_name_offset":5,"short_name_size":15,"kind":12,"storage":1,"hover":"","comments":"\r\nRuns the user operator control code. This function will be started in its own task with the\r\ndefault priority and stack size whenever the robot is enabled via the Field Management System\r\nor the VEX Competition Switch in the operator control mode. If the robot is disabled or\r\ncommunications is lost, the operator control task will be stopped by the kernel. Re-enabling\r\nthe robot will restart the task, not resume it from where it left off.\r\n\r\nIf no VEX Competition Switch or Field Management system is plugged in, the VEX Cortex will\r\nrun the operator control task. Be warned that this will also occur if the VEX Cortex is\r\ntethered directly to a computer via the USB A to A cable without any VEX Joystick attached.\r\n\r\nCode running in this task can take almost any action, as the VEX Joystick is available and\r\nthe scheduler is operational. However, proper use of delay() or taskDelayUntil() is highly\r\nrecommended to give other tasks (including system tasks such as updating LCDs) time to run.\r\n\r\nThis task should never exit; it should end with some kind of infinite loop, even if empty.","declarations":[],"spell":"12:6-12:21|-1|1|2","extent":"12:1-90:2|-1|1|0","bases":[],"derived":[],"vars":[0,1,2],"uses":[],"callees":["14:2-14:7|1|3|32","33:5-33:10|2|3|32","39:5-39:10|2|3|32","44:19-44:36|3|3|32","44:19-44:36|3|3|32","45:20-45:37|3|3|32","45:20-45:37|3|3|32","54:8-54:26|4|3|32","56:8-56:26|4|3|32","58:13-58:31|4|3|32","63:7-63:25|4|3|32","69:8-69:26|4|3|32","72:13-72:30|3|3|32","75:8-75:26|4|3|32","78:9-78:27|4|3|32","81:14-81:31|3|3|32","88:3-88:8|2|3|32"]},{"id":1,"usr":16913615305470395639,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["14:2-14:7|0|3|32"],"callees":[]},{"id":2,"usr":13582985887125507576,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["33:5-33:10|0|3|32","39:5-39:10|0|3|32","88:3-88:8|0|3|32"],"callees":[]},{"id":3,"usr":16955196749859571634,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["44:19-44:36|0|3|32","45:20-45:37|0|3|32","72:13-72:30|0|3|32","81:14-81:31|0|3|32"],"callees":[]},{"id":4,"usr":15259717676604550619,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["54:8-54:26|0|3|32","56:8-56:26|0|3|32","58:13-58:31|0|3|32","63:7-63:25|0|3|32","69:8-69:26|0|3|32","75:8-75:26|0|3|32","78:9-78:27|0|3|32"],"callees":[]}],"vars":[{"id":0,"usr":4979194143460907148,"detailed_name":"int leftPower","short_name_offset":4,"short_name_size":9,"hover":"int leftPower = joystickGetAnalog(1, 3)","comments":"Get power for drivetrains, match to cubic function for more precision in slow movements","declarations":[],"spell":"44:7-44:16|0|3|2","extent":"44:3-44:42|0|3|0","type":0,"uses":["47:3-47:12|0|3|4","47:28-47:37|0|3|4","85:18-85:27|0|3|4"],"kind":13,"storage":1},{"id":1,"usr":373998925792206884,"detailed_name":"int rightPower","short_name_offset":4,"short_name_size":10,"hover":"int rightPower = joystickGetAnalog(1, 2)","comments":"","declarations":[],"spell":"45:7-45:17|0|3|2","extent":"45:3-45:43|0|3|0","type":0,"uses":["48:3-48:13|0|3|4","48:29-48:39|0|3|4","85:29-85:39|0|3|4"],"kind":13,"storage":1},{"id":2,"usr":3185613693453119543,"detailed_name":"int rollerPower","short_name_offset":4,"short_name_size":11,"hover":"int rollerPower = 0","comments":"Create variables for roller power","declarations":[],"spell":"51:7-51:18|0|3|2","extent":"51:3-51:22|0|3|0","type":0,"uses":["57:5-57:16|0|3|4","59:5-59:16|0|3|4","64:4-64:15|0|3|4","86:14-86:25|0|3|4"],"kind":13,"storage":1},{"id":3,"usr":11704401161668865448,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["17:14-17:19|-1|1|4","38:17-38:22|-1|1|4"],"kind":0,"storage":0},{"id":4,"usr":16076141502039815893,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["23:9-23:13|-1|1|4","32:17-32:21|-1|1|4"],"kind":0,"storage":0},{"id":5,"usr":4451153280197508442,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["27:43-27:46|-1|1|4"],"kind":0,"storage":0},{"id":6,"usr":12514171657659813011,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["54:33-54:39|-1|1|4","56:33-56:39|-1|1|4","69:33-69:39|-1|1|4","75:33-75:39|-1|1|4"],"kind":0,"storage":0},{"id":7,"usr":3098295060285782257,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["58:38-58:46|-1|1|4","63:32-63:40|-1|1|4","78:34-78:42|-1|1|4"],"kind":0,"storage":0}]}