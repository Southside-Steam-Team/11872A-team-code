16
{"last_modification_time":1574454635,"language":1,"import_file":"c:/users/lijing/documents/github/11872a-team-code/pros-cortex-tasktest/include/main.h","args_hash":14019735862634459746,"includes":[{"line":3,"resolved_path":"c:/users/lijing/documents/github/11872a-team-code/pros-cortex-tasktest/include/main.h"}],"dependencies":["c:/users/lijing/documents/github/11872a-team-code/pros-cortex-tasktest/include/main.h","c:/users/lijing/documents/github/11872a-team-code/pros-cortex-tasktest/include/api.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/stdlib.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/_ansi.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/newlib.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/sys/config.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/sys/features.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/sys/reent.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/sys/_types.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/machine/_types.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/machine/_default_types.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/sys/lock.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/sys/cdefs.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/alloca.h","c:/program files/pros/toolchain/usr/lib/gcc/arm-none-eabi/7.2.1/include/stdint.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/stdint.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/sys/_intsup.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/sys/_stdint.h","c:/users/lijing/documents/github/11872a-team-code/pros-cortex-tasktest/include/global.h","c:/users/lijing/documents/github/11872a-team-code/pros-cortex-tasktest/include/jinx.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/string.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/xlocale.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/strings.h","c:/users/lijing/documents/github/11872a-team-code/pros-cortex-tasktest/include/mathutils.h","c:/users/lijing/documents/github/11872a-team-code/pros-cortex-tasktest/include/aps.h","c:/users/lijing/documents/github/11872a-team-code/pros-cortex-tasktest/include/chassis.h","c:/users/lijing/documents/github/11872a-team-code/pros-cortex-tasktest/include/sonar.h","c:/users/lijing/documents/github/11872a-team-code/pros-cortex-tasktest/include/asyncchassiscontrol.h","c:/users/lijing/documents/github/11872a-team-code/pros-cortex-tasktest/include/asynctraycontrol.h","c:/users/lijing/documents/github/11872a-team-code/pros-cortex-tasktest/include/asyncarmcontrol.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/math.h","c:/program files/pros/toolchain/usr/lib/gcc/arm-none-eabi/7.2.1/include/stddef.h","c:/program files/pros/toolchain/usr/lib/gcc/arm-none-eabi/7.2.1/include/stdarg.h","c:/users/lijing/documents/github/11872a-team-code/pros-cortex-tasktest/include/debug.h","c:/users/lijing/documents/github/11872a-team-code/pros-cortex-tasktest/include/auto.h","c:/users/lijing/documents/github/11872a-team-code/pros-cortex-tasktest/include/tests.h","c:/users/lijing/documents/github/11872a-team-code/pros-cortex-tasktest/include/nerd_pid.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/machine/ieeefp.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/_newlib_version.h","c:/program files/pros/toolchain/usr/arm-none-eabi/include/machine/stdlib.h","c:/program files/pros/toolchain/usr/lib/gcc/arm-none-eabi/7.2.1/include/stdbool.h"],"skipped_by_preprocessor":[],"types":[{"id":0,"usr":15288547025822067336,"detailed_name":"TurnDir","short_name_offset":0,"short_name_size":7,"kind":10,"hover":"","comments":"Enums","declarations":[],"spell":"7:14-7:21|-1|1|2","extent":"7:9-12:2|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":1,"usr":8126681755988593682,"detailed_name":"TurnDir","short_name_offset":0,"short_name_size":7,"kind":252,"hover":"","comments":"","declarations":[],"spell":"12:3-12:10|-1|1|2","extent":"7:1-12:10|-1|1|0","alias_of":0,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["12:3-12:10|-1|1|4","78:97-78:104|-1|1|4","90:41-90:48|-1|1|4","104:54-104:61|-1|1|4"]},{"id":2,"usr":17,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":3,"usr":10137358260057956950,"detailed_name":"StopType","short_name_offset":0,"short_name_size":8,"kind":10,"hover":"","comments":"","declarations":[],"spell":"14:14-14:22|-1|1|2","extent":"14:9-19:2|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":4,"usr":6586606101661873598,"detailed_name":"StopType","short_name_offset":0,"short_name_size":8,"kind":252,"hover":"","comments":"","declarations":[],"spell":"19:3-19:11|-1|1|2","extent":"14:1-19:11|-1|1|0","alias_of":3,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["19:3-19:11|-1|1|4","47:185-47:193|-1|1|4","65:187-65:195|-1|1|4"]},{"id":5,"usr":1219340627877709967,"detailed_name":"MTTMode","short_name_offset":0,"short_name_size":7,"kind":10,"hover":"","comments":"","declarations":[],"spell":"21:14-21:21|-1|1|2","extent":"21:9-26:2|-1|1|0","bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":[]},{"id":6,"usr":14948836772136721136,"detailed_name":"MTTMode","short_name_offset":0,"short_name_size":7,"kind":252,"hover":"","comments":"","declarations":[],"spell":"26:3-26:10|-1|1|2","extent":"21:1-26:10|-1|1|0","alias_of":5,"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[],"uses":["26:3-26:10|-1|1|4","47:204-47:211|-1|1|4","65:206-65:213|-1|1|4"]},{"id":7,"usr":14394485293687490857,"detailed_name":"Cart","short_name_offset":0,"short_name_size":4,"kind":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"types":[],"funcs":[],"vars":[],"instances":[9],"uses":["29:1-29:5|-1|1|4"]}],"funcs":[{"id":0,"usr":13990717667807297633,"detailed_name":"void moveToTargetSimple(double targetX, double targetY, double startX, double startY, int power, int startPower, double maxErrorX, double decelEarly, int decelPower, double dropEarly, StopType stopType, MTTMode mode)","short_name_offset":5,"short_name_size":18,"kind":12,"storage":1,"hover":"","comments":"\r\nMoves to a desired position along a line connecting the target and starting points\r\n\r\n@param targetX - the x component of the target point\r\n@param targetY - the y component of the target point\r\n@param startX - the x component of the starting point\r\n@param startY - the y component of the starting point\r\n@param power - (-127 - 127) the power to travel the line, negatives means the robot travels backwards\r\n@param startPower - the starting power to ramp up to power (No use with MTT_SIMPLE)\r\n@param maxErrorX - (e.g. 0.5 - 1) the maxiumum error perpendicular to the line in inches\r\n@param decelEarly - (0 - 20) the distance from the target when to use the constant decelPower\r\n@param decelPower - (0 - 50) the power to use when decelerating\r\n@param dropEarly - (0 - 15) the distance from the target when to start breaking if needed, this also affects the deceleration point\r\n@param stopType - the StopType to use to park\r\n@param mode - the MTTMode to use to travel the line","declarations":[{"spell":"47:6-47:24|-1|1|1","param_spellings":["47:32-47:39","47:48-47:55","47:64-47:70","47:79-47:85","47:91-47:96","47:102-47:112","47:121-47:130","47:139-47:149","47:155-47:165","47:174-47:183","47:194-47:202","47:212-47:216"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":1,"usr":15078484001480908499,"detailed_name":"void moveToTargetDisSimple(double angle, double distance, double startX, double startY, int power, int startPower, double maxErrorX, double decelEarly, int decelPower, double dropEarly, StopType stopType, MTTMode mode, _Bool isDegrees)","short_name_offset":5,"short_name_size":21,"kind":12,"storage":1,"hover":"","comments":"\r\nMoves a desired distance along a line in the direction of the given angle\r\n\r\n@param angle - the orientation to move in\r\n@param distance - the distance to travel in inches\r\n@param startX - the x component of the starting point\r\n@param startY - the y component of the starting point\r\n@param power - (-127 - 127) the power to travel the line, negatives means the robot travels backwards\r\n@param startPower - the starting power to ramp up to power (No use with MTT_SIMPLE)\r\n@param maxErrorX - (e.g. 0.5 - 1) the maxiumum error perpendicular to the line in inches\r\n@param decelEarly - (0 - 20) the distance from the target when to use the constant decelPower\r\n@param decelPower - (0 - 50) the power to use when decelerating\r\n@param dropEarly - (0 - 15) the distance from the target when to start breaking if needed, this also affects the deceleration point\r\n@param stopType - the StopType to use to park\r\n@param mode - the MTTMode to use to travel the line\r\n@param isDegrees - if the angle is given in degrees","declarations":[{"spell":"65:6-65:27|-1|1|1","param_spellings":["65:35-65:40","65:49-65:57","65:66-65:72","65:81-65:87","65:93-65:98","65:104-65:114","65:123-65:132","65:141-65:151","65:157-65:167","65:176-65:185","65:196-65:204","65:214-65:218","65:225-65:234"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":2,"usr":17919242284907419880,"detailed_name":"void sweepTurnToTarget(double targetX, double targetY, double targetAngle, double targetRadius, TurnDir turnDir, int power, _Bool isAccurate, _Bool isDegrees)","short_name_offset":5,"short_name_size":17,"kind":12,"storage":1,"hover":"","comments":"\r\nTurns to face a specific point with an offset if desired\r\n\r\n@param targetX - the x component of the target point\r\n@param targetY - the y component of the target point\r\n@param targetAngle - the angle to sweep to\r\n@param targetRadius - (e.g. 10 - 20) the radius of the circle to follow in inches\r\n@param turnDir - the direction to turn based on TurnDir enum (TURN_CH = chooses automatically)\r\n@param power - (-127 - 127) the power to take the turn, negatives means the robot travels backwards\r\n@param isAccurate - if the sweeps should be more accurate\r\n@param isDegrees - if the targetAngle is given in degrees","declarations":[{"spell":"78:6-78:23|-1|1|1","param_spellings":["78:31-78:38","78:47-78:54","78:63-78:74","78:83-78:95","78:105-78:112","78:118-78:123","78:130-78:140","78:147-78:156"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":3,"usr":7637729284641278468,"detailed_name":"void turnToAngleNew(double targetAngle, TurnDir turnDir, double fullPowerRatio, int coastPower, double stopPowerDiff, _Bool harshStop, _Bool isDegrees)","short_name_offset":5,"short_name_size":14,"kind":12,"storage":1,"hover":"","comments":"\r\nTurns to a specified orientation\r\n\r\n@param targetAngle - the angle to turn to\r\n@param turnDir - the direction to turn based on TurnDir enum (TURN_CH = chooses automatically)\r\n@param fullPowerRatio - (0.0 - 1.0) ratio of the turn taken in full power, depends on speed and accuracy needed\r\n@param coastPower - (e.g. 20 - 30) the power used to turn after full power, also depends on speed and accuracy needed\r\n@param stopPowerDiff - (e.g. 10 - 15) the angle error in degrees to cut the motors\r\n@param harshStop - if the robot should brake at the end of the turn\r\n@param isDegrees - if the targetAngle is given in degrees","declarations":[{"spell":"90:6-90:20|-1|1|1","param_spellings":["90:28-90:39","90:49-90:56","90:65-90:79","90:85-90:95","90:104-90:117","90:124-90:133","90:140-90:149"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":4,"usr":11185536193323194787,"detailed_name":"void turnToTargetNew(double targetX, double targetY, TurnDir turnDir, double fullPowerRatio, int coastPower, double stopPowerDiff, double angleOffset, _Bool harshStop, _Bool isDegrees)","short_name_offset":5,"short_name_size":15,"kind":12,"storage":1,"hover":"","comments":"\r\nTurns to face a specific point with an offset if desired\r\n\r\n@param targetX - the x component of the target point\r\n@param targetY - the y component of the target point\r\n@param turnDir - the direction to turn based on TurnDir enum (TURN_CH = chooses automatically)\r\n@param fullPowerRatio - (0.0 - 1.0) ratio of the turn taken in full power, depends on speed and accuracy needed\r\n@param coastPower - (e.g. 20 - 30) the power used to turn after full power, also depends on speed and accuracy needed\r\n@param stopPowerDiff - (e.g. 10 - 15) the angle error in degrees to cut the motors\r\n@param angleOffset - the desired offset to the angle directly facing the point\r\n@param harshStop - if the robot should brake at the end of the turn\r\n@param isDegrees - if the angleOffset is given in degrees","declarations":[{"spell":"104:6-104:21|-1|1|1","param_spellings":["104:29-104:36","104:45-104:52","104:62-104:69","104:78-104:92","104:98-104:108","104:117-104:130","104:139-104:150","104:157-104:166","104:173-104:182"]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]},{"id":5,"usr":13682499067635771429,"detailed_name":"void applyHarshStop()","short_name_offset":5,"short_name_size":14,"kind":12,"storage":1,"hover":"","comments":"\r\nHarshly stops the robot","declarations":[{"spell":"108:6-108:20|-1|1|1","param_spellings":[]}],"bases":[],"derived":[],"vars":[],"uses":[],"callees":[]}],"vars":[{"id":0,"usr":10259681146885060147,"detailed_name":"TurnDir::TURN_CW","short_name_offset":9,"short_name_size":7,"hover":"TurnDir::TURN_CW = 0","comments":"","declarations":[],"spell":"9:3-9:10|0|2|2","extent":"9:3-9:10|0|2|0","type":2,"uses":[],"kind":22,"storage":0},{"id":1,"usr":12494414647585925623,"detailed_name":"TurnDir::TURN_CCW","short_name_offset":9,"short_name_size":8,"hover":"TurnDir::TURN_CCW = 1","comments":"","declarations":[],"spell":"10:3-10:11|0|2|2","extent":"10:3-10:11|0|2|0","type":2,"uses":[],"kind":22,"storage":0},{"id":2,"usr":7385385347842121910,"detailed_name":"TurnDir::TURN_CH","short_name_offset":9,"short_name_size":7,"hover":"TurnDir::TURN_CH = 2","comments":"","declarations":[],"spell":"11:3-11:10|0|2|2","extent":"11:3-11:10|0|2|0","type":2,"uses":[],"kind":22,"storage":0},{"id":3,"usr":13806482048329991164,"detailed_name":"StopType::STOP_NONE","short_name_offset":10,"short_name_size":9,"hover":"StopType::STOP_NONE = 0","comments":"","declarations":[],"spell":"16:3-16:12|3|2|2","extent":"16:3-16:25|3|2|0","type":2,"uses":[],"kind":22,"storage":0},{"id":4,"usr":2319202029042811248,"detailed_name":"StopType::STOP_SOFT","short_name_offset":10,"short_name_size":9,"hover":"StopType::STOP_SOFT = 1","comments":"","declarations":[],"spell":"17:3-17:12|3|2|2","extent":"17:3-17:25|3|2|0","type":2,"uses":[],"kind":22,"storage":0},{"id":5,"usr":6075167304175219006,"detailed_name":"StopType::STOP_HARSH","short_name_offset":10,"short_name_size":10,"hover":"StopType::STOP_HARSH = 2","comments":"","declarations":[],"spell":"18:3-18:13|3|2|2","extent":"18:3-18:26|3|2|0","type":2,"uses":[],"kind":22,"storage":0},{"id":6,"usr":7107459460180241719,"detailed_name":"MTTMode::MTT_SIMPLE","short_name_offset":9,"short_name_size":10,"hover":"MTTMode::MTT_SIMPLE = 0","comments":"","declarations":[],"spell":"23:3-23:13|5|2|2","extent":"23:3-23:13|5|2|0","type":2,"uses":[],"kind":22,"storage":0},{"id":7,"usr":13278854944228224457,"detailed_name":"MTTMode::MTT_PROPORTIONAL","short_name_offset":9,"short_name_size":16,"hover":"MTTMode::MTT_PROPORTIONAL = 1","comments":"","declarations":[],"spell":"24:3-24:19|5|2|2","extent":"24:3-24:19|5|2|0","type":2,"uses":[],"kind":22,"storage":0},{"id":8,"usr":15248980148047355602,"detailed_name":"MTTMode::MTT_CASCADING","short_name_offset":9,"short_name_size":13,"hover":"MTTMode::MTT_CASCADING = 2","comments":"","declarations":[],"spell":"25:3-25:16|5|2|2","extent":"25:3-25:16|5|2|0","type":2,"uses":[],"kind":22,"storage":0},{"id":9,"usr":17168777119965255617,"detailed_name":"Cart lastTarget","short_name_offset":5,"short_name_size":10,"hover":"","comments":"Coordinates of last target","declarations":[],"spell":"29:6-29:16|-1|1|2","extent":"29:1-29:16|-1|1|0","type":7,"uses":[],"kind":13,"storage":1},{"id":10,"usr":14548632056741113288,"detailed_name":"MOTION_ALGORITHMS_H","short_name_offset":0,"short_name_size":19,"hover":"#define MOTION_ALGORITHMS_H","comments":"","declarations":[],"spell":"2:9-2:28|-1|1|2","extent":"2:9-2:28|-1|1|0","uses":[],"kind":255,"storage":0},{"id":11,"usr":13431182507274246120,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["65:220-65:224|-1|1|4","78:125-78:129|-1|1|4","78:142-78:146|-1|1|4","90:119-90:123|-1|1|4","90:135-90:139|-1|1|4","104:152-104:156|-1|1|4","104:168-104:172|-1|1|4"],"kind":0,"storage":0}]}